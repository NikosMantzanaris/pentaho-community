/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.32
 * Generated at: 2012-11-01 17:49:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import org.pentaho.platform.util.web.SimpleUrlFactory;
import org.pentaho.platform.uifoundation.component.xml.PropertiesEditorUIComponent;
import org.pentaho.platform.uifoundation.component.xml.SolutionTreeUIComponent;
import org.pentaho.platform.web.http.request.HttpRequestParameterProvider;
import org.pentaho.platform.web.http.session.HttpSessionParameterProvider;
import org.pentaho.platform.api.engine.IPentahoSession;
import org.pentaho.platform.web.http.WebTemplateHelper;
import org.pentaho.platform.api.engine.IUITemplater;
import org.pentaho.platform.util.VersionHelper;
import org.pentaho.platform.util.messages.LocaleHelper;
import org.pentaho.platform.web.jsp.messages.Messages;
import org.pentaho.platform.engine.core.system.PentahoSystem;
import org.pentaho.platform.engine.security.SecurityHelper;
import org.pentaho.platform.web.http.PentahoHttpSessionHelper;

public final class PropertiesEditor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	 
	response.setCharacterEncoding(LocaleHelper.getSystemEncoding());
	String baseUrl = PentahoSystem.getApplicationContext().getBaseUrl();

	IPentahoSession userSession = PentahoHttpSessionHelper.getPentahoSession( request );

	HttpRequestParameterProvider requestParameters = new HttpRequestParameterProvider( request );
	HttpSessionParameterProvider sessionParameters = new HttpSessionParameterProvider( userSession );
	String path = request.getParameter( "path" );
	
	String thisUrl = baseUrl; //+ "./PropertiesEditor?"; //$NON-NLS-1$
	SimpleUrlFactory urlFactory = new SimpleUrlFactory( thisUrl );
	ArrayList messages = new ArrayList();
	
	String intro = "";
	String footer = "";
	IUITemplater templater = PentahoSystem.get(IUITemplater.class, userSession );
	if( templater != null ) {
		String sections[] = templater.breakTemplate( "template.html", "", userSession ); //$NON-NLS-1$ //$NON-NLS-2$
		if( sections != null && sections.length > 0 ) {
			intro = sections[0];
		}
		if( sections != null && sections.length > 1 ) {
			footer = sections[1];
		}
	} else {
		intro = Messages.getString( "UI.ERROR_0002_BAD_TEMPLATE_OBJECT" );
	}
	

      out.print(intro );
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table width=\"100%\" class=\"content_table\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"20\" style=\"padding-left: 5px; height: 24px;\">\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td>\r\n");
      out.write("         <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>\r\n");
      out.write("\r\n");
      out.write("                  <div class=\"icon_folder_sm\"><a href=\"Admin\">");
      out.print( Messages.getString("UI.USER_ADMIN") );
      out.write("</a></div>\r\n");
      out.write("               </td>\r\n");
      out.write("               <td>\r\n");
      out.write("                  <div class=\"icon_folder_sm\"><a href=\"javascript:history.go(0)\">");
      out.print( Messages.getString("UI.USER_PERMISSIONS") );
      out.write("</a></div>\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("         </table>\r\n");
      out.write("      </td>\r\n");
      out.write("\r\n");
      out.write("   </tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("  \t<table border=\"0\" width=\"100%\" class=\"content_header\" cellpadding=\"0\" cellspacing=\"0\" style=\"positionx:absolute;top:50px;left:10px;width:200px;height:20px;\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td width=\"100%\">\r\n");
      out.write("\t\t\t\t");
      out.print( Messages.getString("UI.USER_PERMISSION_TREE") );
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("<div id=\"treediv\" style=\"border:1px solid #808080;positionx:absolute;topx:80px;left:10px;width:310px;height:520px;overflow:auto\">\r\n");
      out.write("\r\n");

	SolutionTreeUIComponent repository = new SolutionTreeUIComponent( urlFactory, messages, userSession );
	repository.validate( userSession, null );
	repository.setParameterProvider( HttpRequestParameterProvider.SCOPE_REQUEST, requestParameters ); 
	repository.setParameterProvider( HttpSessionParameterProvider.SCOPE_SESSION, sessionParameters ); 
	
	String treeContent = repository.getContent( "text/html" ); //$NON-NLS-1$

      out.print( treeContent );
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("  \t<table border=\"0\" width=\"100%\" class=\"content_header\" cellpadding=\"0\" cellspacing=\"0\" style=\"position:relative;top:-550px;left:330px;width:200px;height:20px;\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td width=\"100%\">\r\n");
      out.write("\t\t\t\t");
      out.print( Messages.getString("UI.USER_PERMISSION_SETTINGS") );
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("<div id=\"itemdiv\" style=\"border:1px solid #808080;position:relative;top:-550px;left:330px;width:1100px;height:520px;overflow:none\">\r\n");
      out.write("\t");
 if( path != null ) { 
      out.write("\r\n");
      out.write("\t\t<iframe style=\"border:0px\" src=\"");
      out.print( "PropertiesPanel?path=" + path );
      out.write("\" height=\"520\" width=\"1100\" name=\"dataframe\">\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t<iframe style=\"border:0px\" src=\"about:blank\" height=\"520\" width=\"1100\" name=\"dataframe\">\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t</iframe>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
